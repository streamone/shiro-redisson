plugins {
    id 'eclipse'
    id 'idea'
    id 'java-library'
    id 'maven'
    id 'maven-publish'
    id 'signing'
    id 'jacoco'
    id 'com.github.kt3k.coveralls' version '2.8.2'
}

def publish_username = project.hasProperty("ossrhUsername") ? project.ossrhUsername : ''
def publish_password = project.hasProperty("ossrhPassword") ? project.ossrhPassword : ''

sourceCompatibility = 1.7
targetCompatibility = 1.7

group = 'com.github.streamone'
version = '1.0.0.RELEASE'

repositories {
    mavenCentral()
}

dependencies {
  api 'org.redisson:redisson:2.13.0',
  'org.apache.shiro:shiro-core:1.3.2',
  'org.apache.shiro:shiro-web:1.3.2'

  implementation 'org.slf4j:slf4j-api:1.7.25',
    'javax.servlet:servlet-api:2.5'

  testImplementation 'junit:junit:4.12',
    'org.springframework:spring-test:3.2.18.RELEASE',
    'org.mockito:mockito-core:2.13.0'

  testRuntimeOnly 'org.slf4j:jcl-over-slf4j:1.7.25',
    'ch.qos.logback:logback-core:1.1.11',
    'ch.qos.logback:logback-classic:1.1.11',
    'ch.qos.logback:logback-access:1.1.11',
    'org.springframework:spring-core:3.2.18.RELEASE',
    'org.springframework:spring-beans:3.2.18.RELEASE',
    'org.springframework:spring-context:3.2.18.RELEASE'
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.8'
}

javadoc {
    options.encoding = "UTF-8"
    options.locale = "en_US"
}

task sourceJar(type: Jar) {
    from sourceSets.main.allSource
    classifier "sources"
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    from javadoc
    classifier "javadoc"
}

artifacts {
    archives javadocJar
    archives sourceJar
}

tasks.withType(Sign) {
    onlyIf { project.hasProperty("publish_sign") }
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourceJar
            artifact javadocJar
            pom {
                name = project.name
                packaging = 'jar'
                description = 'A redis based implementation of Shiro Cache, using redisson for basic capabilities.'
                url = 'https://github.com/streamone/shiro-redisson'
                scm {
                    url = 'https://github.com/streamone/shiro-redisson'
                    connection = 'scm:git:https://github.com/streamone/shiro-redisson.git'
                    developerConnection = 'scm:git:https://github.com/streamone/shiro-redisson.git'
                }
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://github.com/streamone/shiro-redisson/blob/master/LICENSE'
                        distribution = 'repo'
                    }
                }
                developers {
                    developer {
                        id = 'streamone'
                        name = 'Zhongxu You'
                        email = 'streamone@163.com'
                    }
                }
            }
        }
    }

    repositories {
        maven {
            def releaseRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots"
            url version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releaseRepoUrl
            credentials {
                username publish_username
                password publish_password
            }
        }
    }
}

signing {
    sign publishing.publications
}
