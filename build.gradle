plugins {
    id 'eclipse'
    id 'idea'
    id 'java'
    id 'maven'
    id 'maven-publish'
    id 'signing'
    id 'jacoco'
    id 'com.github.kt3k.coveralls' version '2.8.2'
}

def publish_username = project.hasProperty("ossrhUsername") ? project.ossrhUsername : ''
def publish_password = project.hasProperty("ossrhPassword") ? project.ossrhPassword : ''

sourceCompatibility = 1.7
targetCompatibility = 1.7

group = 'com.github.streamone'
version = '1.0.0.SNAPSHOT'

repositories {
    mavenCentral()
}

configurations {
	all*.exclude group: 'apache', module: 'commons-logging'
	all*.exclude group: 'commons-logging', module: 'commons-logging'
}

dependencies {
  compile 'org.slf4j:slf4j-api:1.7.25',
    'javax.servlet:servlet-api:2.5',
    'org.apache.shiro:shiro-core:1.3.2',
    'org.apache.shiro:shiro-web:1.3.2',
    'org.redisson:redisson:2.11.0'

  testCompile 'junit:junit:4.12',
    'org.springframework:spring-test:3.2.18.RELEASE',
    'org.mockito:mockito-core:2.13.0'

  testRuntime 'org.slf4j:jcl-over-slf4j:1.7.25',
    'ch.qos.logback:logback-core:1.1.11',
    'ch.qos.logback:logback-classic:1.1.11',
    'ch.qos.logback:logback-access:1.1.11',
    'org.springframework:spring-core:3.2.18.RELEASE',
    'org.springframework:spring-beans:3.2.18.RELEASE',
    'org.springframework:spring-context:3.2.18.RELEASE'
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.5'
}

javadoc {
    options.encoding = "UTF-8"
    options.locale = "en_US"
}

task sourceJar(type: Jar) {
    from sourceSets.main.allSource
    classifier "sources"
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    from javadoc
    classifier "javadoc"
}

artifacts {
    archives javadocJar
    archives sourceJar
}

signing {
    sign configurations.archives
}

tasks.withType(Sign) {
    onlyIf { project.hasProperty("publish_sign") }
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourceJar
            artifact javadocJar
        }
    }
}
